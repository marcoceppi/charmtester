#!/bin/bash
set -eu

# needs to pick a directory to run from... 
#   - perhaps the workspace for the current job? available via $WORKSPACE
#   - perhaps JENKINS_HOME?

#TODO use JUJU_ENV

usage() {
  echo "usage: $0 <charm_name>"
  # maybe this should be branch?
  echo "  'charm_name' is the charm to test"
  echo "will run charm tests against the user's default juju environment"
  exit 1
}
(( $# == 1 )) || usage

data_dirs() {
  find $HOME/.juju -mindepth 1 -maxdepth 1 -type d
}

wipe_data_dirs() {
  for data_dir in $(data_dirs); do
    sudo rm -Rf $data_dir
  done
}

bootstrap() {
  yes | juju destroy-environment #TODO make this conditional on provider
  sleep 60
  #wipe_data_dirs #TODO make this conditional on provider
  juju bootstrap || true
  # leave it up
}

setup() {
  echo "setting up test"
  if [ -d $WORKSPACE ]; then
    rm -Rf $WORKSPACE/*
  fi
  #if [ -d $HOME/charms/oneiric/$charm_name ]; then
  #  rm -Rf $HOME/charms/oneiric/$charm_name
  #fi
  #charm get $charm_name $HOME/charms/oneiric/$charm_name
}

run_test() {
  echo "running test"
  juju deploy --repository $HOME/charms local:$charm_name

  timeout 1800s jitsu watch $charm_name/0
}

archive_logs() {
  local destination=$1
  juju-record -f $destination/$(basename $0)-logs.zip
  sudo chown -Rf jenkins.nogroup $destination
}

archive_charm() {
  local destination=$1
  #TODO fix series
  if [ -d $HOME/charms/precise/$charm_name ]; then
    ( cd $HOME/charms/precise/$charm_name ; zip -r $destination/charm-$charm_name.zip . )
  fi
}

fail() {
  echo "test failed"
  exit 1
}

teardown() {
  echo "archiving charm"
  archive_charm $WORKSPACE

  echo "archiving logs"
  archive_logs $WORKSPACE

  echo "tearing down test"
  #juju destroy-service $charm_name #TODO make this conditional on provider
  yes | juju destroy-environment #TODO make this conditional on provider
}

for arg; do
  charm_name=$arg
done

bootstrap

trap teardown EXIT INT TERM
setup
run_test
trap - EXIT INT TERM

teardown
exit 0

